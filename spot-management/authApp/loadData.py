# Stephen Bowen 2022
# System imports
import json

# Bosdyn imports
from bosdyn.api.graph_nav import map_pb2
from bosdyn.api.mission import nodes_pb2

# Google protobuf imports
from google.protobuf.json_format import MessageToJson

# Load graphnav from local storage
def loadMap(path: str):
    """
    Load a map from the given file path.
    :param path: Path to the root directory of the map.
    :return: the graph, waypoints, waypoint snapshots and edge snapshots as a JSON object.
    """
    path = "/code/graphStore/" + path
    with open(path, "rb") as graph_file:
        # Load the graph file and deserialize it. The graph file is a protobuf containing only the waypoints and the
        # edges between them.
        data = graph_file.read()
        current_graph = map_pb2.Graph()
        current_graph.ParseFromString(data)

        # Convert pb to JSON
        return json.loads(MessageToJson(current_graph))

# Load mission from local storage
def loadMission(path: str):
    """
    Load a mission file from storage and convert it to JSON for transport to client side.
    :param path: Path to the root directory of the mission.
    :return: the mission as a JSON object.
    """
    path = "/code/graphStore/" + path
    with open(path, "rb") as mission_file:
        # Load the mission file and deserialize it. 
        data = mission_file.read()
        current_mission = nodes_pb2.Node()
        current_mission.ParseFromString(data)

        # Convert pb to JSON
        return json.loads(MessageToJson(current_mission))

if "__main__" == __name__:
    pass
    # print(load_map("/code/data/graph"))
    # print(load_mission("graph-nav-store/data/missions/autogenerated"))